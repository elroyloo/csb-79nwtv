{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","notes.js","components/Createnote.jsx","components/App.jsx","index.js"],"names":["Header","React","createElement","Footer","year","Date","getFullYear","Note","props","className","title","content","onClick","onDelete","id","notesToBeUsed","key","Createnote","setTitle","useState","setContent","onSubmit","event","preventDefault","onAdd","name","onChange","target","value","placeholder","rows","type","App","notes","setNotes","deleteNote","previousNotes","filter","noteItem","index","newNote","map","ReactDOM","render","document","getElementById"],"mappings":"4LAUeA,MARf,WACE,OACEC,IAAAC,cAAA,cACED,IAAAC,cAAA,UAAI,mBCMKC,MATf,WACE,MAAMC,GAAO,IAAIC,MAAOC,cACxB,OACEL,IAAAC,cAAA,cACED,IAAAC,cAAA,SAAG,kBAAkBE,KCSZG,MAbf,SAAcC,GAIZ,OACEP,IAAAC,cAAA,OAAKO,UAAU,QACbR,IAAAC,cAAA,UAAKM,EAAME,OACXT,IAAAC,cAAA,SAAIM,EAAMG,SACVV,IAAAC,cAAA,UAAQU,QAPZ,WACEJ,EAAMK,SAASL,EAAMM,MAMW,YCiBrBC,MA3BO,CACpB,CACEC,IAAK,EACLN,MAAO,aACPC,QACE,4GAEJ,CACEK,IAAK,EACLN,MAAO,QACPC,QACE,oHAEJ,CACEK,IAAK,EACLN,MAAO,SACPC,QACE,4EAEJ,CACEK,IAAK,EACLN,MAAO,wBACPC,QACE,2ICsBSM,MA3Cf,SAAoBT,GAClB,MAAOE,EAAOQ,GAAYC,mBAAS,KAC5BR,EAASS,GAAcD,mBAAS,IAmBvC,OACElB,IAAAC,cAAA,WACED,IAAAC,cAAA,QAAMO,UAAU,aAAaY,SAXbC,IAClBA,EAAMC,iBACFb,GAASC,IACXH,EAAMgB,MAAM,CAAEd,QAAOC,YACrBO,EAAS,IACTE,EAAW,OAOTnB,IAAAC,cAAA,SACEuB,KAAK,QACLC,SAtBmBJ,IACzBJ,EAASI,EAAMK,OAAOC,QAsBhBA,MAAOlB,EACPmB,YAAY,UAEd5B,IAAAC,cAAA,YACEuB,KAAK,UACLC,SAxBqBJ,IAC3BF,EAAWE,EAAMK,OAAOC,QAwBlBA,MAAOjB,EACPkB,YAAY,iBACZC,KAAK,MAEP7B,IAAAC,cAAA,UAAQ6B,KAAK,UAAS,UCKfC,MArCf,WACE,MAAOC,EAAOC,GAAYf,mBAASJ,GAQnC,SAASoB,EAAWrB,GAClBoB,EAAUE,GACDA,EAAcC,OAAO,CAACC,EAAUC,IAC9BA,IAAUzB,IAKvB,OACEb,IAAAC,cAAA,WACED,IAAAC,cAACF,EAAM,MACPC,IAAAC,cAACe,EAAU,CAACO,MAjBhB,SAAiBgB,GACfN,EAAUE,GACD,IAAIA,EAAeI,OAgBzBP,EAAMQ,IAAI,CAACH,EAAUC,IAElBtC,IAAAC,cAACK,EAAI,CACHS,IAAKuB,EACLzB,GAAIyB,EACJ7B,MAAO4B,EAAS5B,MAChBC,QAAS2B,EAAS3B,QAClBE,SAAUsB,KAIhBlC,IAAAC,cAACC,EAAM,Q,OCnCbuC,EAASC,OAAO1C,IAAAC,cAAC8B,EAAG,MAAKY,SAASC,eAAe,W","file":"static/js/main.46941453.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>My Note Taker</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright &copy; {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nfunction Note(props) {\n  function handleClick() {\n    props.onDelete(props.id);\n  }\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <button onClick={handleClick}>DELETE</button>\n    </div>\n  );\n}\n\nexport default Note;\n","const notesToBeUsed = [\n  {\n    key: 1,\n    title: \"Delegation\",\n    content:\n      \"Q. How many programmers does it take to change a light bulb? A. None – It’s a hardware problem\"\n  },\n  {\n    key: 2,\n    title: \"Loops\",\n    content:\n      \"How to keep a programmer in the shower forever. Show him the shampoo bottle instructions: Lather. Rinse. Repeat.\"\n  },\n  {\n    key: 3,\n    title: \"Arrays\",\n    content:\n      \"Q. Why did the programmer quit his job? A. Because he didn't get arrays.\"\n  },\n  {\n    key: 4,\n    title: \"Hardware vs. Software\",\n    content:\n      \"What's the difference between hardware and software? You can hit your hardware with a hammer, but you can only curse at your software.\"\n  }\n];\n\nexport default notesToBeUsed;\n","import React, { useState } from \"react\";\n\nfunction Createnote(props) {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const handleTitleChange = (event) => {\n    setTitle(event.target.value);\n  };\n\n  const handleContentChange = (event) => {\n    setContent(event.target.value);\n  };\n\n  const submitNote = (event) => {\n    event.preventDefault();\n    if (title && content) {\n      props.onAdd({ title, content });\n      setTitle(\"\");\n      setContent(\"\");\n    }\n  };\n\n  return (\n    <div>\n      <form className=\"createnote\" onSubmit={submitNote}>\n        <input\n          name=\"title\"\n          onChange={handleTitleChange}\n          value={title}\n          placeholder=\"Title\"\n        />\n        <textarea\n          name=\"content\"\n          onChange={handleContentChange}\n          value={content}\n          placeholder=\"Take a note...\"\n          rows=\"3\"\n        />\n        <button type=\"submit\">Add</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Createnote;\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport notesToBeUsed from \"../notes\";\nimport Createnote from \"./Createnote\";\n\nfunction App() {\n  const [notes, setNotes] = useState(notesToBeUsed);\n\n  function addNote(newNote) {\n    setNotes((previousNotes) => {\n      return [...previousNotes, newNote];\n    });\n  }\n\n  function deleteNote(id) {\n    setNotes((previousNotes) => {\n      return previousNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div>\n      <Header />\n      <Createnote onAdd={addNote} />\n      {notes.map((noteItem, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            onDelete={deleteNote}\n          />\n        );\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//1. Create a new React app.\n//2. Create a App.jsx component.\n//3. Create a Header.jsx component that renders a <header> element\n//to show the Keeper App name in an <h1>.\n//4. Create a Footer.jsx component that renders a <footer> element\n//to show a copyright message in a <p> with a dynamically updated year.\n//5. Create a Note.jsx component to show a <div> element with a\n//<h1> for a title and a <p> for the content.\n//6. Make sure that the final website is styled like the example shown here:\n//https://l1pp6.csb.app/\n\n//HINT: You will need to study the classes in teh styles.css file to appy styling.\n"],"sourceRoot":""}